import 'package:flutter/material.dart';
import 'package:supabase_flutter/supabase_flutter.dart';
import '../services/auth_service.dart';

class ResetPasswordPage extends StatefulWidget {
  const ResetPasswordPage({super.key});

  @override
  State<ResetPasswordPage> createState() => _ResetPasswordPageState();
}

class _ResetPasswordPageState extends State<ResetPasswordPage> {
  final _auth = AuthService();
  final _p1 = TextEditingController();
  final _p2 = TextEditingController();
  bool _busy = false;
  String? _err;

  @override
  void initState() {
    super.initState();
    // If the link worked, Supabase should have a session ready on this page.
    // (You can inspect it if you like:)
    // debugPrint('session: ${Supabase.instance.client.auth.currentSession}');
  }

  Future<void> _submit() async {
    setState(() => _err = null);
    final a = _p1.text.trim();
    final b = _p2.text.trim();
    if (a.length < 8) { setState(() => _err = 'Password should be at least 8 characters.'); return; }
    if (a != b)      { setState(() => _err = 'Passwords do not match.'); return; }

    setState(() => _busy = true);
    try {
      await _auth.updatePassword(a);
      if (!mounted) return;
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('Password updated. You can log in now.')),
      );
      Navigator.of(context).pushReplacementNamed('/login');
    } catch (e) {
      setState(() => _err = 'Could not update password. Open the link again or try later.');
    } finally {
      if (mounted) setState(() => _busy = false);
    }
  }

  @override
  void dispose() { _p1.dispose(); _p2.dispose(); super.dispose(); }

  @override
  Widget build(BuildContext context) {
    final session = Supabase.instance.client.auth.currentSession;
    final hasSession = session != null;

    return Scaffold(
      backgroundColor: const Color(0xFF171026),
      appBar: AppBar(
        backgroundColor: const Color(0xFF2A1D49),
        iconTheme: const IconThemeData(color: Colors.white),
        title: const Text('Set new password', style: TextStyle(color: Colors.white)),
      ),
      body: Center(
        child: Container(
          width: 360,
          margin: const EdgeInsets.all(16),
          padding: const EdgeInsets.all(16),
          decoration: BoxDecoration(
            color: Colors.white.withOpacity(0.06),
            borderRadius: BorderRadius.circular(16),
            border: Border.all(color: Colors.white.withOpacity(0.12)),
          ),
          child: Column(
            mainAxisSize: MainAxisSize.min,
            children: [
              if (!hasSession) ...[
                const Text(
                  'We couldnâ€™t detect a recovery session.\n'
                  'Please open the reset link from your email on this device.',
                  textAlign: TextAlign.center,
                  style: TextStyle(color: Colors.white70),
                ),
                const SizedBox(height: 12),
              ],
              TextField(
                controller: _p1,
                obscureText: true,
                decoration: _dec('New password'),
              ),
              const SizedBox(height: 10),
              TextField(
                controller: _p2,
                obscureText: true,
                decoration: _dec('Confirm password'),
              ),
              if (_err != null) ...[
                const SizedBox(height: 8),
                Text(_err!, style: const TextStyle(color: Color(0xFFFFB4AB))),
              ],
              const SizedBox(height: 14),
              SizedBox(
                width: double.infinity,
                height: 46,
                child: ElevatedButton(
                  onPressed: _busy ? null : _submit,
                  style: ElevatedButton.styleFrom(
                    backgroundColor: const Color(0xFF8B5CF6),
                    shape: const StadiumBorder(),
                  ),
                  child: _busy
                      ? const CircularProgressIndicator(color: Colors.white)
                      : const Text('Update password', style: TextStyle(color: Colors.white)),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  InputDecoration _dec(String label) => InputDecoration(
        labelText: label,
        labelStyle: const TextStyle(color: Colors.white70),
        filled: true,
        fillColor: const Color(0xFF2A1D49),
        border: OutlineInputBorder(
          borderRadius: BorderRadius.circular(12),
          borderSide: BorderSide.none,
        ),
      );
}
